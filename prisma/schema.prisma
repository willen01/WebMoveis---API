// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id Int @id @default(autoincrement())

  name      String
  image_url String
  products  Product[]

  @@map("category")
}

model Product {
  id Int @id @default(autoincrement())

  name              String
  image             String
  short_description String
  description       String
  price             Int
  discount          Int

  width  Int
  height Int
  weigth Int
  length Int

  category_id Int
  category    Category @relation(fields: [category_id], references: [id])

  is_featured Boolean

  images ProductImage[]

  order_products OrderProduct[]

  @@map("product")
}

model ProductImage {
  id Int @id @default(autoincrement())

  product Product @relation(fields: [product_id], references: [id])

  product_id  Int
  image_url   String
  description String

  @@map("product_image")
}

model Customer {
  id Int @id @default(autoincrement())

  name     String
  email    String @unique
  password String

  orders Order[]

  @@map("customer")
}

//DESAFIO - adciona novos status de pedido al√©m de WaitingForPayment e Paid
enum OrderStatus {
  WaitingForPayment
  UnderAnalysis
  Available
  InDispute
  Returned
  Canceled
  Debited
  TemporaryRetention
  Paid
}

model Order {
  id Int @id @default(autoincrement())

  date           DateTime
  status         OrderStatus
  total          Int
  shipping_price Int
  shipping       String

  address     String
  number      String
  complement  String
  postal_code String
  city        String
  state       String

  customer_id Int
  customer    Customer @relation(fields: [customer_id], references: [id])

  products OrderProduct[]

  @@map("order")
}

model OrderProduct {
  id Int @id @default(autoincrement())

  order_id Int
  order    Order @relation(fields: [order_id], references: [id])

  product_id Int
  product    Product @relation(fields: [product_id], references: [id])

  quantity Int

  @@map("order_product")
}
